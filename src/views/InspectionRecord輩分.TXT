<template>
  <!-- 上方選單區 -->
  <v-container class="mb-8" fluid>
    <v-row justify="center" align="center">
      <v-col cols="12" sm="8" md="6">
        <h2 class="text-center mb-6">選擇驗屋戶別</h2>

        <v-select
          v-model="selectedBuilding"
          :items="buildingList"
          label="請選擇棟別"
          outlined
          dense
          required
          :loading="loading"
          :error-messages="errorMessage"
        />

        <v-select
          v-model="selectedUnit"
          :items="unitList"
          label="請選擇戶別"
          outlined
          dense
          required
          :disabled="!selectedBuilding"
        />

    <v-btn
          color="primary"
          block
          class="mt-4"
          :disabled="!selectedBuilding || !selectedUnit"
          @click="confirm"
        >
          查詢單一戶別
        </v-btn>

        <v-btn
          color="deep-purple"
          dark
          block
          class="mt-2"
          :loading="loadingAllRecords"
          @click="fetchAllRecordsForProject"
        >
          查詢所有戶別
        </v-btn>

        <v-btn
          color="secondary"
          block
          class="mt-2"
          v-if="selectedUnit"
          @click="showDetail = !showDetail"
        >
          {{ showDetail ? '隱藏戶別資料' : '顯示戶別資料' }}
        </v-btn>
      </v-col>
    </v-row>
  </v-container>

  <!-- 下方：戶別詳細資料卡片 -->
  <v-container fluid v-if="showDetail">
    <v-row justify="center">
      <v-col cols="12" sm="10" md="10">
        <InspectionDetailCard :detail="currentHouseDetail" />
      </v-col>
    </v-row>
  </v-container>

  <!-- 下方：驗屋紀錄表格 -->
  <v-container fluid v-if="selectedUnit">
    <v-row justify="center">
      <v-col cols="12" sm="12" md="12">
        <InspectionRecordTable
          :unit-id="selectedUnit"
          :records="records"
          :owner="currentHouseDetail.owner || ''"
        />
      </v-col>
    </v-row>
  </v-container>
</template>

<script setup>
import { ref, computed, watch } from 'vue';
import InspectionRecordTable from '@/components/InspectionRecordTable.vue';
import InspectionDetailCard from '@/components/InspectionDetailCard.vue';
import { fetchUnitList, fetchInspectionRecords, fetchAllHouseDetails,fetchAllProjectInspectionRecords } from '@/api';
import { useUserStore } from '@/store/user';
import { useToast } from 'vue-toastification'; // 假設你使用 toast

const toast = useToast(); // 假設你使用 toast
const emit = defineEmits(['startLoading', 'stopLoading', 'notify']);
const userStore = useUserStore();

const unitsData = ref({});
const allHouseDetails = ref({});
const selectedBuilding = ref('');
const selectedUnit = ref('');
const loading = ref(false);
const loadingAllRecords = ref(false); // 新增：用於查詢所有記錄
const errorMessage = ref('');
const records = ref([]);
const showDetail = ref(false);

const currentHouseDetail = computed(() => allHouseDetails.value[selectedUnit.value] || {});
const buildingList = computed(() => Object.keys(unitsData.value));
const unitList = computed(() => unitsData.value[selectedBuilding.value] || []);

// 查詢驗屋紀錄
const confirm = async () => {
  if (!selectedUnit.value) return;
  loading.value = true;
  try {
    const currentProjectName = userStore.user ? userStore.user.projectName : null; // 從 store 獲取 projectName
    console.log(`[InspectionRecord.vue] confirm - Calling fetchInspectionRecords with unitId: ${selectedUnit.value}, projectName: ${currentProjectName}`); // 添加日誌

    if (!currentProjectName) {
      alert('查詢失敗：無法獲取建案資訊，請重新登入。');
      console.error("[InspectionRecord.vue] confirm: projectName is missing from user store before calling fetchInspectionRecords.");
      loading.value = false;
      return;
    }

    // 將 projectName 傳遞給 fetchInspectionRecords
    const result = await fetchInspectionRecords(selectedUnit.value, currentProjectName);

    if (result.status === 'success') {
      records.value = result.records;
    } else {
      records.value = [];
      alert('查詢失敗：' + result.message);
    }
  } catch (err) {
    console.error('❌ 查詢驗屋紀錄失敗:', err);
    alert('伺服器錯誤，請稍後再試');
  } finally {
    loading.value = false;
  }
};

// 載入棟別與戶別資料
const loadUnits = async () => {
  loading.value = true;
  errorMessage.value = '';
  try {
    const projectName = userStore.user.projectName; // ✅ 從登入資料取出 projectName

    const [unitResult, detailResult] = await Promise.all([
      fetchUnitList(projectName),
      fetchAllHouseDetails(projectName)
    ]);

    if (unitResult.status === 'success') {
      unitsData.value = unitResult.units || {};
    } else {
      errorMessage.value = unitResult.message || '取得棟別戶別資料失敗';
    }

    if (detailResult.status === 'success') {
      allHouseDetails.value = detailResult.data || {};
    } else {
      console.warn('⚠️ 未能載入戶別詳細資料:', detailResult.message);
    }
  } catch (e) {
    errorMessage.value = '伺服器錯誤，無法載入棟別與戶別資料';
  } finally {
    loading.value = false;
  }
};


// ✅ 等待 user 登入完成才載入資料
watch(
  () => userStore.user,
  (newUser) => {
    if (newUser && newUser.key) {
      loadUnits();
    }
  },
  { immediate: true }
);
</script>

<style scoped>
.mb-6 {
  margin-bottom: 1.5rem;
}
</style>

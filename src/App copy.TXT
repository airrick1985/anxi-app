<template>
  <v-app>
    <!-- 頂部 App Bar -->
    <v-app-bar app color="primary" dark>
      <v-toolbar-title @mousedown="startForceUpdate" @mouseup="cancelForceUpdate" @mouseleave="cancelForceUpdate">
        ANXI 驗屋系統
      </v-toolbar-title>
      <v-spacer />
      <template v-if="user">
        <v-btn icon @click="dialog = true">
          <v-icon>mdi-account</v-icon>
        </v-btn>
        <span class="me-4 clickable" @click="dialog = true">{{ user.name }}</span>
      </template>
    </v-app-bar>

    

    <v-main>
      <router-view
        @start-loading="loading = true"
        @stop-loading="loading = false"
        @notify="showSnackbar"
      />

      <!-- ✅ Footer 移到 v-main 內 -->
      <v-footer
        color="grey lighten-4"
        height="80"
        class="footer-text"
        padless
      >
        <v-container class="text-center py-2">
          <div>
            <strong>ANXI 驗屋系統</strong> ｜ 版本 v{{ appVersion }}
          </div>
          <div class="text-caption">
            &copy; {{ currentYear }} ANXI. All rights reserved.
          </div>
        </v-container>
      </v-footer>
    </v-main>

    <!-- 浮動式 BottomNavBar -->
    <BottomNavBar v-if="showBottomNav" />

    <!-- 編輯個人資料對話框 -->
    <EditProfileDialog
      v-model:dialog="dialog"
      @start-loading="loading = true"
      @stop-loading="loading = false"
      @notify="showSnackbar"
    />

    <!-- 更新版 Dialog -->
    <UpdateDialog
      v-model="showUpdateDialog"
      :release-version="releaseVersion"
      :release-notes="releaseNotes"
      @confirm="doUpdate"
    />

    <!-- 系統通知 Snackbar -->
    <v-snackbar v-model="snackbar" :timeout="3000">{{ snackbarMessage }}</v-snackbar>
  </v-app>
</template>

<script setup>
import { ref, computed, watch, onMounted } from 'vue';
import { storeToRefs } from 'pinia';
import { useUserStore } from './store/user';
import { useRouter, useRoute } from 'vue-router';
import { useRegisterSW } from 'virtual:pwa-register/vue';
import { getLatestRelease } from '@/api';
import EditProfileDialog from './components/EditProfileDialog.vue';
import BottomNavBar from './components/BottomNavBar.vue';
import UpdateDialog from './components/UpdateDialog.vue';
import manifest from '../public/manifest.json';

const userStore = useUserStore();
const { user } = storeToRefs(userStore);
const dialog = ref(false);
const loading = ref(false);
const snackbar = ref(false);
const snackbarMessage = ref('');
const appVersion = manifest.version;
const currentYear = new Date().getFullYear();

// Router
const router = useRouter();
const route = useRoute();

// 底部導航顯示條件
const showBottomNav = computed(() => 
  user.value && ['Home', 'InspectionRecord', 'InspectionOverview'].includes(route.name)
);

// 強制更新連點
const homeClickCount = ref(0);
let clickTimer = null;
const startForceUpdate = () => {
  homeClickCount.value++;
  if (homeClickCount.value >= 5) {
    console.log('🔄 手動觸發更新');
    updateServiceWorker(true).then(() => window.location.reload());
    homeClickCount.value = 0;
    clearTimeout(clickTimer);
  } else {
    if (clickTimer) clearTimeout(clickTimer);
    clickTimer = setTimeout(() => homeClickCount.value = 0, 3000);
  }
};
const cancelForceUpdate = () => {
  if (clickTimer) clearTimeout(clickTimer);
  homeClickCount.value = 0;
};

// Snackbar
const showSnackbar = (message) => {
  snackbarMessage.value = message;
  snackbar.value = true;
};

// PWA 更新管理
const { needRefresh, updateServiceWorker } = useRegisterSW({ immediate: true });
const showUpdateDialog = ref(false);
const releaseVersion = ref('');
const releaseNotes = ref('');

// 用戶登入後也檢查更新
onMounted(() => {
  if (!user.value && route.name !== 'Login') {
    router.replace({ name: 'Login' });
  }
  window.addEventListener('triggerUpdateDialog', () => {
    showUpdateDialog.value = true;
  });
});

// 監聽 needRefresh 自動彈出
watch(needRefresh, async (val) => {
  if (val) {
    try {
      const { version, notes } = await getLatestRelease();
      releaseVersion.value = version;
      releaseNotes.value = notes;
      showUpdateDialog.value = true;
    } catch (err) {
      console.error('讀取 Release Notes 錯誤:', err);
      releaseVersion.value = '';
      releaseNotes.value = '有新版本可用，請更新應用程式';
      showUpdateDialog.value = true;
    }
  }
});

// 確認更新
const doUpdate = async () => {
  userStore.clearUser(); // 登出
  await updateServiceWorker(true);
  showSnackbar('更新完成，請重新登入');
  setTimeout(() => window.location.reload(), 1000);
};
</script>

<style scoped>
.footer-text {
  font-size: 0.8rem;
  color: #555;
  padding-bottom: 20px;
}

body {
  margin: 0;
}

.clickable {
  cursor: pointer;
}
</style>
